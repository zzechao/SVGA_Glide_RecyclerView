apply plugin: 'maven-publish'
apply plugin: 'signing'

tasks.register('sourcesJar', Jar) {
    from android.sourceSets.main.java.source
    archiveClassifier.set("sources")
}

tasks.register('javadocJar', Jar) {
    from tasks.javadoc
    archiveClassifier.set("javadoc")
}

//--- 修改配置一 ---

publishing {
    publications {
        release(MavenPublication) {
            println("publish-maven Log-------> PUBLISH_GROUP_ID: $project.group; " +
                    "PUBLISH_ARTIFACT_ID: $project.artifactId; " +
                    "PUBLISH_VERSION: $project.version; ")
            // The coordinates of the library, being set from variables that
            // we'll set up in a moment

            //配置一传入的参数
            groupId project.group
            artifactId project.artifactId
            version project.version

            artifact("$buildDir/outputs/aar/${project.getName()}-release.aar")
            artifact tasks["sourcesJar"]
            //artifact tasks["javadocJar"]

            // Self-explanatory metadata for the most part
            pom {
                //--- 修改配置三 ---
                name = project.getName()
                description = project.description
                //添加文件描述
                // If your project has a dedicated site, use its URL here
                url = project.url //项目github链接
                licenses {
                    license {
                        //协议类型，一般默认Apache License2.0的话不用改：
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        //--- 修改配置四 ---
                        id = 'zhouzechao10'     //你的sonatype用户ID
                        name = 'zhouz'   //你的sonatype用户名
                        email = 'zhouzechao10@gmail.com'    //你的sonatype注册邮箱
                    }
                }
                // Version control info, if you're using GitHub, follow the format as seen here
                scm {
                    //--- 修改配置五 ---
                    connection = project.scm.connectionUrl
                    developerConnection = project.scm.developerConnectionUrl
                    //分支地址：
                    url = project.feature
                }
                // A slightly hacky fix so that your POM will include any transitive dependencies
                // that your library builds upon
                withXml {
                    def dependenciesNode = asNode().appendNode('dependencies')
                    project.configurations.implementation.allDependencies.each {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        if (it.group != null) {
                            dependencyNode.appendNode('groupId', it.group)
                            dependencyNode.appendNode('artifactId', it.name)
                            dependencyNode.appendNode('version', it.version)
                        }
                    }
                }
            }
        }
    }
    repositories {
        // The repository to publish to, Sonatype/MavenCentral
        maven {
            // This is an arbitrary name, you may also use "mavencentral" or
            // any other name that's descriptive for you

            //--- 修改配置六 ---
            name = project.getName()
            def releasesRepoUrl = "https://s01.oss.sonatype.org/content/groups/staging/"
            def releasesRepoUrl2 = "https://s01.oss.sonatype.org/content/repositories/releases/"
            def snapshotsRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
            // You only need this if you want to publish snapshots, otherwise just set the URL
            // to the release repo directly
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl

            // The username and password we've fetched earlier
            credentials {
                username "$ossrhUsername"
                password "$ossrhPassword"
            }
        }
    }
}
signing {
    sign publishing.publications
}