publishing {
    publications {
        glidesvgaplugin(MavenPublication) {
            println("publish-maven Log-------> PUBLISH_GROUP_ID: $project.group; " +
                    "PUBLISH_ARTIFACT_ID: $project.artifactId; " +
                    "PUBLISH_VERSION: $project.version; " +
                    "ossrhUsername:$ossrhUsername; " +
                    "ossrhPassword:$ossrhPassword ")

            groupId = project.group
            artifactId = project.artifactId
            version = project.version

            //from components.java
            artifact tasks["sourcesJar"]
            artifact tasks["javadocJar"]

            pom {
                name = project.artifactId
                packaging "jar"
                description = project.description
                url = project.url
                licenses {
                    license {
                        //协议类型，一般默认Apache License2.0的话不用改：
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        //--- 修改配置四 ---
                        id = 'zhouzechao10'     //你的sonatype用户ID
                        name = 'zhouz'   //你的sonatype用户名
                        email = 'zhouzechao10@gmail.com'    //你的sonatype注册邮箱
                    }
                }
                scm {
                    url = project.feature
                    connection = project.scm.connectionUrl
                    developerConnection = project.scm.developerConnectionUrl
                }

                // A slightly hacky fix so that your POM will include any transitive dependencies
                // that your library builds upon
                withXml {
                    def dependenciesNode = asNode().appendNode('dependencies')

                    project.configurations.implementation.allDependencies.each {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
        }
    }
    repositories {
        maven {
            name = project.name
            def releasesRepoUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username System.getenv('ossrhUsername')
                password System.getenv('ossrhPassword')
            }
        }
    }
}
signing {
    sign(publishing.publications.glidesvgaplugin)
}

tasks.configureEach {
    print("name:$name")
    if (name == "publishPluginMavenPublicationToGlidesvgapluginRepository") {
        mustRunAfter(tasks.signGlidesvgapluginPublication)
    }
    if (name == "publishGlidesvgapluginPublicationToGlidesvgapluginRepository") {
        mustRunAfter(tasks.signPluginMavenPublication)
    }
}